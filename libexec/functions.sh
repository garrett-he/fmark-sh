fmark_has_opt() {
    local opt
    local name="$1"
    shift 1

    for opt in "$@"; do
        if [ "$opt" == "--" ]; then
            return 1
        fi

        if expr "$opt" : "--$name" > /dev/null; then
            return 0
        fi
    done

    return 1
}

fmark_get_opt() {
    local opt
    local value

    local name="$1"
    shift

    for opt in "$@"; do
        if [ "$opt" = "--" ]; then
            return 1
        fi

        if value=$(expr "$opt" : "--$name=\(.*\)"); then
            echo "$value"
            return 0
        fi
    done

    return 1
}

fmark_ostype() {
    if uname | grep -i linux > /dev/null; then
        echo linux
    elif uname | grep -i darwin > /dev/null; then
        echo darwin
    elif uname | grep -i cygwin > /dev/null; then
        echo cygwin
    fi
}

fmark_firefox_is_running() {
    if [[ "$(fmark_ostype)" == "cygwin" ]]; then
        ps -W | grep firefox > /dev/null
    else
        pgrep firefox > /dev/null
    fi

    return $?
}

fmark_gen_conf() {
    cfgfile="$FMARK_HOME"/etc/fmark.conf
    echo '# auto generated by fmark' > $cfgfile
    echo >> $cfgfile

    os=`uname`

    if [[ "$(fmark_ostype)" == "darwin" ]]; then
        basedir="$HOME/Library/Application Support/Firefox"
    elif [[ "$(fmark_ostype)" == "linux" ]]; then
        echo "TBD"
    elif [[ "$(fmark_ostype)" == "cygwin" ]]; then
        echo "TBD"
    fi

    profile=`awk -F '=' '/[Profile+]/{profile=1} profile==1 && $1~/Path/{print $2; exit}' "$basedir"/profiles.ini`

    read -p "use profile: "$profile" [y/n]? " yn

    if [ "$yn" == "y" ]; then
        echo 'profiledir="'"$basedir"/"$profile"'"' >> $cfgfile
    fi
}

fmark_init() {
    if fmark_has_opt "help" "$@"; then
        display_cmd_help
        exit
    fi

    cfgfile="$FMARK_HOME"/etc/fmark.conf

    if [ ! -r "$cfgfile" ]; then
        read -p "configuration 'fmark.conf' not found, generate [y/n]? " yn

        if [ "$yn" == "y" ]; then
            fmark_gen_conf "$cfgfile"
        else
            echo "configuration '$cfgfile' not found or readable" >&2
            exit 1
        fi
    fi

    source "$FMARK_HOME"/etc/fmark.conf

    dbfile=$(fmark_get_opt "dbfile" "$@" || echo "$profiledir"/places.sqlite)

    if [ ! -r "$dbfile" ]; then
        echo "database '$dbfile' not found or readable" >&2
        exit 1
    fi
}

fmark_query_db() {
    sql="$1"
    shift

    if [ $# -gt 0 ]; then
        sqlite3 "$*" "$dbfile" "$sql"
    else
        sqlite3 "$dbfile" "$sql"
    fi
}

fmark_color_print() {
    if [ ! -t 1 ]; then
        echo "$1"
        return 0
    fi

    local black="\033[01;30m"
    local red="\033[31m"
    local green="\033[32m"
    local yellow="\033[33m"
    local blue="\033[34m"
    local magenta="\033[35m"
    local cyan="\033[36m"
    local white="\033[37m"

    eval local format=\$$2
    echo -e "${format}${1}\033[0m"
}
