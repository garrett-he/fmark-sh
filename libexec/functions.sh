# Copyright (C) 2017 Garrett HE <garrett.he@hotmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

fmark_has_opt() {
    local opt
    local name="$1"
    shift 1

    for opt in "$@"; do
        if [ "$opt" == "--" ]; then
            return 1
        fi

        if expr "$opt" : "--$name" > /dev/null; then
            return 0
        fi
    done

    return 1
}

fmark_get_opt() {
    local opt
    local value

    local name="$1"
    shift

    for opt in "$@"; do
        if [ "$opt" = "--" ]; then
            return 1
        fi

        if value=$(expr "$opt" : "--$name=\(.*\)"); then
            echo "$value"
            return 0
        fi
    done

    return 1
}

fmark_ostype() {
    if uname | grep -i linux > /dev/null; then
        echo linux
    elif uname | grep -i darwin > /dev/null; then
        echo darwin
    elif uname | grep -i cygwin > /dev/null; then
        echo cygwin
    fi
}

fmark_firefox_is_running() {
    if [[ "$(fmark_ostype)" == "cygwin" ]]; then
        ps -W | grep firefox > /dev/null
    else
        pgrep firefox > /dev/null
    fi

    return $?
}

fmark_gen_conf() {
    cfgfile="$FMARK_HOME"/etc/fmark.conf
    echo '# auto generated by fmark' > $cfgfile
    echo >> $cfgfile

    os=`uname`

    if [[ "$(fmark_ostype)" == "darwin" ]]; then
        basedir="$HOME/Library/Application Support/Firefox"
    elif [[ "$(fmark_ostype)" == "linux" ]]; then
        echo "TBD"
    elif [[ "$(fmark_ostype)" == "cygwin" ]]; then
        echo "TBD"
    fi

    profile=`awk -F '=' '/[Profile+]/{profile=1} profile==1 && $1~/Path/{print $2; exit}' "$basedir"/profiles.ini`

    read -p "use profile: "$profile" [y/n]? " yn

    if [ "$yn" == "y" ]; then
        echo 'profiledir="'"$basedir"/"$profile"'"' >> $cfgfile
    fi
}

fmark_init() {
    if fmark_has_opt "help" "$@"; then
        display_cmd_help
        exit
    fi

    cfgfile="$FMARK_HOME"/etc/fmark.conf

    if [ ! -r "$cfgfile" ]; then
        read -p "configuration 'fmark.conf' not found, generate [y/n]? " yn

        if [ "$yn" == "y" ]; then
            fmark_gen_conf "$cfgfile"
        else
            echo "configuration '$cfgfile' not found or readable" >&2
            exit 1
        fi
    fi

    source "$FMARK_HOME"/etc/fmark.conf

    dbfile=$(fmark_get_opt "dbfile" "$@" || echo "$profiledir"/places.sqlite)

    if [ ! -r "$dbfile" ]; then
        echo "database '$dbfile' not found or readable" >&2
        exit 1
    fi
}

fmark_query_db() {
    sql="$1"
    shift

    if [ $# -gt 0 ]; then
        sqlite3 "$*" "$dbfile" "$sql"
    else
        sqlite3 "$dbfile" "$sql"
    fi
}
